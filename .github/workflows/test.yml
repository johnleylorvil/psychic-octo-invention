name: Afèpanou Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
        django-version: ["4.2", "5.0"]
        
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_afepanou
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Django==${{ matrix.django-version }}
        pip install -r requirements.txt
        pip install pytest-django pytest-cov factory-boy faker pytest-mock locust

    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_afepanou" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379/0" >> $GITHUB_ENV
        echo "SECRET_KEY=github-actions-test-secret-key-not-for-production" >> $GITHUB_ENV
        echo "DEBUG=False" >> $GITHUB_ENV

    - name: Run Django checks
      run: |
        python manage.py check --deploy --fail-level WARNING

    - name: Run migrations
      run: |
        python manage.py migrate --settings=config.settings

    - name: Run unit tests with coverage
      run: |
        python -m pytest marketplace/tests/test_models.py marketplace/tests/test_forms.py \
          --ds=config.settings \
          --cov=marketplace \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing \
          --cov-fail-under=70 \
          -v

    - name: Run integration tests
      run: |
        python -m pytest marketplace/tests/test_integration.py \
          --ds=config.settings \
          --maxfail=5 \
          -v

    - name: Run view tests  
      run: |
        python -m pytest marketplace/tests/test_views.py \
          --ds=config.settings \
          --maxfail=10 \
          -v

    - name: Run performance tests
      run: |
        python -m pytest marketplace/tests/test_performance.py \
          --ds=config.settings \
          -m performance \
          --maxfail=3 \
          -v
      continue-on-error: true  # Performance tests can be flaky in CI

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Archive coverage HTML report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report-${{ matrix.python-version }}-django${{ matrix.django-version }}
        path: htmlcov/

    - name: Archive test logs
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: test-logs-${{ matrix.python-version }}-django${{ matrix.django-version }}
        path: |
          logs/
          *.log

  security-tests:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run Bandit security linter
      run: |
        bandit -r marketplace/ -f json -o bandit-report.json
      continue-on-error: true

    - name: Run Safety check
      run: |
        safety check --json --output safety-report.json
      continue-on-error: true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  quality-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install quality tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort

    - name: Check code formatting with Black
      run: |
        black --check --diff marketplace/

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff marketplace/

    - name: Run flake8 linter
      run: |
        flake8 marketplace/ --max-line-length=88 --extend-ignore=E203,W503

  notification:
    runs-on: ubuntu-latest
    needs: [test, security-tests, quality-check]
    if: always()
    
    steps:
    - name: Test Results Summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Unit Tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY  
        echo "- Security Tests: ${{ needs.security-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Quality Check: ${{ needs.quality-check.result }}" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ needs.test.result }}" == "success" ]]; then
          echo "✅ All tests passed successfully!" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Some tests failed. Please check the logs." >> $GITHUB_STEP_SUMMARY
        fi