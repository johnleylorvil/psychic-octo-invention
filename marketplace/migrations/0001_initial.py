# Generated by Django 5.2.4 on 2025-07-19 13:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Banner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("subtitle", models.CharField(blank=True, max_length=300, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("image_url", models.CharField(max_length=255)),
                ("image_path", models.CharField(max_length=255)),
                (
                    "mobile_image_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("link_url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "button_text",
                    models.CharField(
                        blank=True, default="Découvrir", max_length=50, null=True
                    ),
                ),
                (
                    "button_color",
                    models.CharField(
                        blank=True, default="#007bff", max_length=7, null=True
                    ),
                ),
                (
                    "text_color",
                    models.CharField(
                        blank=True, default="#ffffff", max_length=7, null=True
                    ),
                ),
                (
                    "overlay_opacity",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.3,
                        max_digits=3,
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(blank=True, default=True, null=True)),
                ("sort_order", models.IntegerField(blank=True, default=0, null=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("click_count", models.IntegerField(blank=True, default=0, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                "verbose_name": "Bannière",
                "verbose_name_plural": "Bannières",
                "db_table": "banners",
                "ordering": ["sort_order"],
            },
        ),
        migrations.CreateModel(
            name="MediaContentSection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("subtitle", models.CharField(blank=True, max_length=300, null=True)),
                ("description", models.TextField()),
                ("detailed_description", models.TextField(blank=True, null=True)),
                ("image_url", models.CharField(blank=True, max_length=255, null=True)),
                ("image_path", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "button_text",
                    models.CharField(
                        blank=True,
                        default="Voir les produits",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "button_link",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("category_tags", models.TextField(blank=True, null=True)),
                ("product_tags", models.TextField(blank=True, null=True)),
                (
                    "background_color",
                    models.CharField(blank=True, max_length=7, null=True),
                ),
                ("text_color", models.CharField(blank=True, max_length=7, null=True)),
                (
                    "layout_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("left", "Gauche"),
                            ("right", "Droite"),
                            ("center", "Centre"),
                        ],
                        default="left",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(blank=True, default=True, null=True)),
                ("sort_order", models.IntegerField(blank=True, default=0, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                "verbose_name": "Section Contenu",
                "verbose_name_plural": "Sections Contenu",
                "db_table": "media_content_sections",
                "ordering": ["sort_order"],
            },
        ),
        migrations.CreateModel(
            name="NewsletterSubscriber",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.CharField(max_length=100, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=50, null=True)),
                ("last_name", models.CharField(blank=True, max_length=50, null=True)),
                ("is_active", models.BooleanField(blank=True, default=True, null=True)),
                ("subscribed_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("unsubscribed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "source",
                    models.CharField(
                        blank=True, default="website", max_length=50, null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Abonné Newsletter",
                "verbose_name_plural": "Abonnés Newsletter",
                "db_table": "newsletter_subscribers",
            },
        ),
        migrations.CreateModel(
            name="SiteSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("setting_key", models.CharField(max_length=100, unique=True)),
                ("setting_value", models.TextField(blank=True, null=True)),
                (
                    "setting_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("text", "Texte"),
                            ("number", "Nombre"),
                            ("boolean", "Booléen"),
                            ("json", "JSON"),
                        ],
                        default="text",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "group_name",
                    models.CharField(
                        blank=True, default="general", max_length=50, null=True
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                "verbose_name": "Paramètre Site",
                "verbose_name_plural": "Paramètres Site",
                "db_table": "site_settings",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "city",
                    models.CharField(
                        blank=True, default="Port-au-Prince", max_length=50, null=True
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, default="Haïti", max_length=50, null=True
                    ),
                ),
                ("is_seller", models.BooleanField(default=False)),
                (
                    "profile_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("birth_date", models.DateField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Masculin"), ("F", "Féminin"), ("O", "Autre")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("email_verified", models.BooleanField(default=False)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="marketplace_users",
                        related_query_name="marketplace_user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="marketplace_users",
                        related_query_name="marketplace_user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Utilisateur",
                "verbose_name_plural": "Utilisateurs",
                "db_table": "users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(blank=True, max_length=255, null=True)),
                ("is_active", models.BooleanField(blank=True, default=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="carts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Panier",
                "verbose_name_plural": "Paniers",
                "db_table": "carts",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("detailed_description", models.TextField(blank=True, null=True)),
                (
                    "folder_path",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "banner_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "banner_image_path",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("icon", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "is_featured",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("is_active", models.BooleanField(blank=True, default=True, null=True)),
                ("sort_order", models.IntegerField(blank=True, default=0, null=True)),
                ("meta_title", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "meta_description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="marketplace.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Catégorie",
                "verbose_name_plural": "Catégories",
                "db_table": "categories",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_number", models.CharField(max_length=50, unique=True)),
                ("customer_name", models.CharField(max_length=100)),
                ("customer_email", models.CharField(max_length=100)),
                ("customer_phone", models.CharField(max_length=20)),
                ("shipping_address", models.TextField()),
                (
                    "shipping_city",
                    models.CharField(
                        blank=True, default="Port-au-Prince", max_length=50, null=True
                    ),
                ),
                (
                    "shipping_country",
                    models.CharField(
                        blank=True, default="Haïti", max_length=50, null=True
                    ),
                ),
                ("billing_address", models.TextField(blank=True, null=True)),
                (
                    "billing_city",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "billing_country",
                    models.CharField(
                        blank=True, default="Haïti", max_length=50, null=True
                    ),
                ),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "shipping_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "currency",
                    models.CharField(
                        blank=True, default="HTG", max_length=3, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("pending", "En attente"),
                            ("confirmed", "Confirmée"),
                            ("processing", "En traitement"),
                            ("shipped", "Expédiée"),
                            ("delivered", "Livrée"),
                            ("cancelled", "Annulée"),
                            ("refunded", "Remboursée"),
                        ],
                        default="pending",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("pending", "En attente"),
                            ("paid", "Payée"),
                            ("failed", "Échec"),
                            ("refunded", "Remboursée"),
                        ],
                        default="pending",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True, default="moncash", max_length=50, null=True
                    ),
                ),
                (
                    "shipping_method",
                    models.CharField(
                        blank=True, default="standard", max_length=50, null=True
                    ),
                ),
                (
                    "tracking_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("estimated_delivery", models.DateField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("admin_notes", models.TextField(blank=True, null=True)),
                ("coupon_code", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "source",
                    models.CharField(
                        blank=True, default="web", max_length=50, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Commande",
                "verbose_name_plural": "Commandes",
                "db_table": "orders",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("old_status", models.CharField(blank=True, max_length=50, null=True)),
                ("new_status", models.CharField(max_length=50)),
                ("comment", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="marketplace.order",
                    ),
                ),
            ],
            options={
                "verbose_name": "Historique Statut",
                "verbose_name_plural": "Historique Statuts",
                "db_table": "order_status_history",
            },
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.CharField(max_length=200, unique=True)),
                ("content", models.TextField(blank=True, null=True)),
                ("excerpt", models.TextField(blank=True, null=True)),
                (
                    "featured_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "template",
                    models.CharField(
                        blank=True, default="default", max_length=50, null=True
                    ),
                ),
                ("meta_title", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "meta_description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("is_active", models.BooleanField(blank=True, default=True, null=True)),
                (
                    "is_featured",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("sort_order", models.IntegerField(blank=True, default=0, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Page",
                "verbose_name_plural": "Pages",
                "db_table": "pages",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.CharField(max_length=200, unique=True)),
                (
                    "short_description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("detailed_description", models.TextField(blank=True, null=True)),
                ("specifications", models.JSONField(blank=True, null=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "promotional_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "stock_quantity",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "min_stock_alert",
                    models.IntegerField(
                        blank=True,
                        default=5,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "sku",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("barcode", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "is_featured",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("is_active", models.BooleanField(blank=True, default=True, null=True)),
                (
                    "is_digital",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "requires_shipping",
                    models.BooleanField(blank=True, default=True, null=True),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("dimensions", models.CharField(blank=True, max_length=100, null=True)),
                ("tags", models.TextField(blank=True, null=True)),
                ("video_url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "warranty_period",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("brand", models.CharField(blank=True, max_length=100, null=True)),
                ("model", models.CharField(blank=True, max_length=100, null=True)),
                ("color", models.CharField(blank=True, max_length=50, null=True)),
                ("material", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "origin_country",
                    models.CharField(
                        blank=True, default="Haïti", max_length=50, null=True
                    ),
                ),
                (
                    "condition_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("new", "Neuf"),
                            ("used", "Utilisé"),
                            ("refurbished", "Reconditionné"),
                        ],
                        default="new",
                        max_length=20,
                        null=True,
                    ),
                ),
                ("meta_title", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "meta_description",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="marketplace.category",
                    ),
                ),
                (
                    "seller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Produit",
                "verbose_name_plural": "Produits",
                "db_table": "products",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("product_name", models.CharField(max_length=200)),
                ("product_sku", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "product_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("product_options", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="marketplace.order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="marketplace.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Article Commande",
                "verbose_name_plural": "Articles Commandes",
                "db_table": "order_items",
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_url", models.CharField(max_length=255)),
                ("image_path", models.CharField(max_length=255)),
                ("alt_text", models.CharField(blank=True, max_length=200, null=True)),
                ("title", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "is_primary",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("sort_order", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "image_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("main", "Principale"),
                            ("gallery", "Galerie"),
                            ("thumbnail", "Miniature"),
                        ],
                        default="gallery",
                        max_length=20,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="marketplace.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Image Produit",
                "verbose_name_plural": "Images Produits",
                "db_table": "product_images",
                "ordering": ["sort_order"],
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("customer_name", models.CharField(max_length=100)),
                (
                    "customer_email",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                ("pros", models.TextField(blank=True, null=True)),
                ("cons", models.TextField(blank=True, null=True)),
                (
                    "is_verified_purchase",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "is_approved",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "helpful_count",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="marketplace.order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="marketplace.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Avis",
                "verbose_name_plural": "Avis",
                "db_table": "reviews",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "moncash_order_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "payment_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "currency",
                    models.CharField(
                        blank=True, default="HTG", max_length=3, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("pending", "En attente"),
                            ("completed", "Complétée"),
                            ("failed", "Échec"),
                            ("cancelled", "Annulée"),
                            ("refunded", "Remboursée"),
                        ],
                        default="pending",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True, default="moncash", max_length=50, null=True
                    ),
                ),
                ("gateway_response", models.JSONField(blank=True, null=True)),
                ("failure_reason", models.TextField(blank=True, null=True)),
                (
                    "reference_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "transaction_date",
                    models.DateTimeField(auto_now_add=True, null=True),
                ),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                (
                    "callback_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("return_url", models.CharField(blank=True, max_length=255, null=True)),
                ("webhook_received_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="marketplace.order",
                    ),
                ),
            ],
            options={
                "verbose_name": "Transaction",
                "verbose_name_plural": "Transactions",
                "db_table": "transactions",
            },
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("options", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="marketplace.cart",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="marketplace.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Article Panier",
                "verbose_name_plural": "Articles Panier",
                "db_table": "cart_items",
                "unique_together": {("cart", "product")},
            },
        ),
    ]
