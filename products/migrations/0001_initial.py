# Generated by Django 5.2.4 on 2025-07-14 00:45

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("image_url", models.CharField(max_length=255)),
                ("image_path", models.CharField(max_length=255)),
                ("alt_text", models.CharField(blank=True, max_length=200)),
                ("title", models.CharField(blank=True, max_length=200)),
                (
                    "is_primary",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("sort_order", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "image_type",
                    models.CharField(blank=True, default="gallery", max_length=20),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "product_images",
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("customer_name", models.CharField(max_length=100)),
                ("customer_email", models.CharField(blank=True, max_length=100)),
                ("rating", models.IntegerField()),
                ("title", models.CharField(blank=True, max_length=200)),
                ("comment", models.TextField(blank=True, null=True)),
                ("pros", models.TextField(blank=True, null=True)),
                ("cons", models.TextField(blank=True, null=True)),
                (
                    "is_verified_purchase",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "is_approved",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "helpful_count",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "reviews",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("detailed_description", models.TextField(blank=True, null=True)),
                ("folder_path", models.CharField(blank=True, max_length=255)),
                ("banner_image", models.CharField(blank=True, max_length=255)),
                ("banner_image_path", models.CharField(blank=True, max_length=255)),
                ("icon", models.CharField(blank=True, max_length=255)),
                (
                    "is_featured",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("is_active", models.BooleanField(blank=True, default=True, null=True)),
                ("sort_order", models.IntegerField(blank=True, default=0, null=True)),
                ("meta_title", models.CharField(blank=True, max_length=200)),
                ("meta_description", models.CharField(blank=True, max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.category",
                    ),
                ),
            ],
            options={
                "db_table": "categories",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=200, unique=True)),
                ("short_description", models.CharField(blank=True, max_length=500)),
                ("description", models.TextField(blank=True, null=True)),
                ("detailed_description", models.TextField(blank=True, null=True)),
                ("specifications", models.JSONField(blank=True, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "promotional_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "stock_quantity",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                (
                    "min_stock_alert",
                    models.IntegerField(blank=True, default=5, null=True),
                ),
                (
                    "sku",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("barcode", models.CharField(blank=True, max_length=100)),
                (
                    "is_featured",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("is_active", models.BooleanField(blank=True, default=True, null=True)),
                (
                    "is_digital",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "requires_shipping",
                    models.BooleanField(blank=True, default=True, null=True),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("dimensions", models.CharField(blank=True, max_length=100)),
                ("tags", models.TextField(blank=True, null=True)),
                ("video_url", models.CharField(blank=True, max_length=255)),
                ("warranty_period", models.IntegerField(blank=True, null=True)),
                ("brand", models.CharField(blank=True, max_length=100)),
                ("model", models.CharField(blank=True, max_length=100)),
                ("color", models.CharField(blank=True, max_length=50)),
                ("material", models.CharField(blank=True, max_length=100)),
                (
                    "origin_country",
                    models.CharField(blank=True, default="Ha√Øti", max_length=50),
                ),
                (
                    "condition_type",
                    models.CharField(blank=True, default="new", max_length=20),
                ),
                ("meta_title", models.CharField(blank=True, max_length=200)),
                ("meta_description", models.CharField(blank=True, max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.category",
                    ),
                ),
            ],
            options={
                "db_table": "products",
            },
        ),
    ]
